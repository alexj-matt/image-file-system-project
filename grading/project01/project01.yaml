- time.csv: 0          # max 3, 
- imgfs.h: # NE PAS REMPLIR CETTE LIGNE
     imgfs_header: 3       # max 3, 
     imgfs_metadata: 3     # max 3, 
     imgfs_file: 2         # max 2, 
- imgfs_tools.c: # NE PAS REMPLIR CETTE LIGNE
  - do_open: # NE PAS REMPLIR CETTE LIGNE
       arguments tests: 1                # max 1, 
       open + error test: 2.5             # max 2.5, 
       read header + error test: 1.5      # max 2.5,  -1 no error test
       alloc. dyn. + test: 1.5            # max 2.5,  -1 no error test
       read metadata + error test: 1.5    # max 2.5,  -1 no error test
  - do_close: 2                           # max 2.5,  -0.5 file ptr not set to NULL after fclose
- imgfs_list.c: # NE PAS REMPLIR CETTE LIGNE
     argument tests: 0.5             # max 0.5, 
     header print: 0.5               # max 0.5, 
     empty case: 0.5                 # max 0.5, 
     loop: 0.5                       # max 0.5, 
     is_valid test: 1               # max 1, 
     print_metadata: 0.5             # max 0.5, 
- imgfs_create.c: # NE PAS REMPLIR CETTE LIGNE
     argument tests: 0.5             # max 0.5, 
     init (version, num_file): 0    # max 1, -1 version and num files not initialized 
     metadata alloc: 1.5             # max 1.5, 
     is_valid init:  1.5             # max 1.5, 
     open: 1                       # max 1, 
     error test open: 1.5            # max 1.5,  
     write header:    1           # max 1.5, -0.5 metadata not freed in case of error 
     write metadata:  1            # max 1.5, -0.5 metadata not freed in case of error
     print good value: 0.25           # max 0.5, -0.25 not writing the actual number of written elements 
     error handling:   1           # max 1.5, -0.5 wrong error type in case of metadata allocation failure 
- imgfs_delete.c: # NE PAS REMPLIR CETTE LIGNE
     argument tests: 0.5             # max 0.5, 
     optimization empty DB:  0       # max 1,  -1 no optimization
     search: 2.5                     # max 2.5, 
     metadata rewrite: 1.5           # max 2.5, -1 the whole metadata is rewritten instead of just the deleted image metadata 
     header update: 1              # max 1.5,   -0.5 header should be updated after writing the metadata to the file
     header rewrite: 2              # max 2, 
     error handling: 1.5             # max 1.5, 
- image_content.c: # NE PAS REMPLIR CETTE LIGNE
  - lazily_resize:  # NE PAS REMPLIR CETTE LIGNE
       argument tests: 1               # max 1, 
       write at right position: 0      # max 1, -1 writing at the wrong position, you should use fseek and the index of the image to find the correct position where to write the metadata 
       error handling: 0.75           # max 1, -0.25 wrong error type if resolution is invalid , should be ERR_RESOLUTION
  - create_resized_img: # NE PAS REMPLIR CETTE LIGNE
       read image: 5           # max 5, 
       vips load: 2.5            # max 2.5, 
       vips resize: 2.5          # max 2.5, 
       vips save: 2.5            # max 2.5, 
       write: 1.5                # max 3, in case thumb res, the vips image is not being written to the file 
       metadata update: 2      # max 2, 
       no leak (free): 1       # max 2, -1 no freeing of vips ressources in case of the thumb res 
       error handling: 1.5       # max 1.5, 
- imgfscmd_functions.c: # NE PAS REMPLIR CETTE LIGNE
      help: 0.5                   # max 1, -0.5 values are hardcoded in help message 
      do_list_cmd: 1.5            # max 1.5, 
      do_create_cmd: 5.5           # max 6, -0.5 header not printed 
      do_delete_cmd: 1.5          # max 1.5, 
- imgfscmd.c: # NE PAS REMPLIR CETTE LIGNE
  - arguments: # NE PAS REMPLIR CETTE LIGNE
      command type:  1                # max 1, 
      struct command_mapping: 0.5       # max 1, -0.5 command name should be a const char* 
      mapping array: 1                # max 1, 
  - parsing args in main(): 2.5         # max 2.5, 
  - VIPS init + shutdown: 1           # max 1, 
- image_dedup.c: # NE PAS REMPLIR CETTE LIGNE
  - compare SHA:  0.5         # max 1, -0.5 strncmp compares null terminated strings, you should use memcmp to compare the SHA. Hashes can contain 0 bytes. 
  - dedup:  # NE PAS REMPLIR CETTE LIGNE
       argument tests: 0.5                 # max 0.5, 
       search (incl. valid): 3           # max 3, 
       duplicate id: 1.5                   # max 1.5, 
       update duplicate content: 2       # max 2, 
- style: 0            # max 2, min -2, (normal = 0), 
- bonus/malus: 0      # max 5, min -5, (normal = 0), 
